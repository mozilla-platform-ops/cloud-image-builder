{
  "variables": {
    "client_id": "{{env `client_id`}}",
    "client_secret": "{{env `client_secret`}}",
	"tenant_id": "{{env `tenant_id`}}",
	"subscription_id": "{{env `subscription_id`}}",
	
	"image_publisher": "{{env `image_publisher`}}",
	"image_offer": "{{env `image_offer`}}",
	"image_sku": "{{env `image_sku`}}",
	
	"managed_image_name": "{{env `managed_image_name`}}",
	"managed_image_resource_group_name": "{{env `managed_image_resource_group_name`}}",
	
	"temp_resource_group_name": "{{env `temp_resource_group_name`}}",
	"managed_image_storage_account_type": "{{env `managed_image_storage_account_type`}}",
	
	"Project": "{{env `Project`}}",
    "base_image": "{{env `base_image`}}",
	"worker_pool_id": "{{env `worker_pool_id`}}",
	"sourceOrganisation": "{{env `sourceOrganisation`}}",
	"sourceRepository": "{{env `sourceRepository`}}",
	"sourceBranch": "{{env `sourceBranch`}}",
    "bootstrapscript": "{{env `bootstrapscript`}}", 
	"deploymentId": "{{env `deploymentId`}}",
	"managed-by": "{{env `managed_by`}}",
	
	"location": "{{env `location`}}",
	"vm_size": "{{env `vm_size`}}",
	"disk_additional_size": "{{env `disk_additional_size`}}"
	
  },
  "builders": [
    {
      "type": "azure-arm",
        
      "client_id": "{{user `client_id`}}",
      "client_secret": "{{user `client_secret`}}",
      "tenant_id": "{{user `tenant_id`}}",
      "subscription_id": "{{user `subscription_id`}}",

      "os_type": "Windows",
      "managed_image_name": "{{user `managed_image_name`}}",
      "managed_image_resource_group_name": "{{user `managed_image_resource_group_name`}}",
      
      "image_publisher": "{{user `image_publisher`}}",
      "image_offer": "{{user `image_offer`}}",
      "image_sku": "{{user `image_sku`}}",
      "communicator": "winrm",
      "winrm_use_ssl": "true",
      "winrm_insecure": "true",
      "winrm_timeout": "3m",
      "winrm_username": "packer",

      "managed_image_storage_account_type": "{{user `managed_image_storage_account_type`}}",
      "temp_resource_group_name": "{{user `temp_resource_group_name`}}",
      "virtual_network_name": "",
      "virtual_network_subnet_name": "",
      "private_virtual_network_with_public_ip": "True",
      "virtual_network_resource_group_name": "",
      "azure_tags": {
          "Project": "{{user `Project`}}",
          "base_image": "{{user `base_image`}}",
		  "worker_pool_id": "{{user `worker_pool_id`}}",
		  "sourceOrganisation": "{{user `sourceOrganisation`}}",
		  "sourceRepository": "{{user `sourceRepository`}}",
		  "sourceBranch": "{{user `sourceBranch`}}",
		  "deploymentId": "{{user `deploymentId`}}"
	  },	
      "location": "{{user `location`}}",
      "vm_size": "{{user `vm_size`}}",
      "async_resourcegroup_delete":true
    }
  ],
  "provisioners": [
    {
      "type": "powershell",
      "inline": [
          "$ErrorActionPreference='SilentlyContinue'",
          "Set-ExecutionPolicy unrestricted -force"
      ]
    },
    {
	  "type": "powershell",
	  "elevated_user": "SYSTEM",
	  "elevated_password": "",
	  "inline": [
        "Invoke-Expression ((New-Object -TypeName net.webclient).DownloadString('{{user `bootstrapscript`}}'))"
	  ]
	},
    {
      "type": "windows-restart"
    },
    {
	  "type": "powershell",
	  "elevated_user": "SYSTEM",
	  "elevated_password": "",
	  "inline": [
        "Invoke-Expression ((New-Object -TypeName net.webclient).DownloadString('{{user `bootstrapscript`}}'))"
	  ]
	},
    {
      "type": "windows-restart"
    },
    {
	  "type": "powershell",
	  "elevated_user": "SYSTEM",
	  "elevated_password": "",
	  "inline": [
        "Invoke-Expression ((New-Object -TypeName net.webclient).DownloadString('{{user `bootstrapscript`}}'))"
	  ]
	},
    {
      "type": "windows-restart"
    },
	{
	  "type": "powershell",
	  "elevated_user": "SYSTEM",
	  "elevated_password": "",
	  "inline": [
        "Invoke-Expression ((New-Object -TypeName net.webclient).DownloadString('{{user `bootstrapscript`}}'))"
	  ]
	},
    {
      "type": "windows-restart"
    },
    {
	  "type": "powershell",
	  "elevated_user": "SYSTEM",
	  "elevated_password": "",
	  "inline": [
        "Invoke-Expression ((New-Object -TypeName net.webclient).DownloadString('{{user `bootstrapscript`}}'))"
	  ]
	},	
    {
      "type": "powershell",
      "inline": [
        "$stage =  ((Get-ItemProperty -path HKLM:\\SOFTWARE\\Mozilla\\ronin_puppet).bootstrap_stage)",
        "If ($stage -ne 'complete') { exit 2}",
        "Set-ItemProperty -Path 'HKLM:\\SOFTWARE\\Mozilla\\ronin_puppet' -name hand_off_ready -type  string -value yes",
		    "Write-Output '>>> Waiting for GA Service (RdAgent) to start ...'",
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "Write-Output '>>> Waiting for GA Service (WindowsAzureTelemetryService) to start ...'",
        "while ((Get-Service WindowsAzureTelemetryService) -and ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running')) { Start-Sleep -s 5 }",
        "Write-Output '>>> Waiting for GA Service (WindowsAzureGuestAgent) to start ...'",
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "Write-Output '>>> Sysprepping VM ...'",
        "if ( Test-Path $Env:SystemRoot\\system32\\Sysprep\\unattend.xml ) {Remove-Item $Env:SystemRoot\\system32\\Sysprep\\unattend.xml -Force}",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while ($true) { $imageState = (Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State).ImageState; Write-Output $imageState; if ($imageState -eq 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { break }",
        "Write-Output '>>> Sysprep complete ...'"
      ]
    }
  ]
}
